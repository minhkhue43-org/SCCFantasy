@using SCCFantasy.Common.Enums;

@{
    ViewData["Title"] = "Home Page";
    IEnumerable<PlayerModel> players = (IEnumerable<PlayerModel>)ViewData["Players"];
    var pageSizes = GridHelper.DefaultPageSizes();
}

<div class="card">
    <div class="card-body">
        <h5 class="card-title text-primary"> Players List</h5>

        <ejs-grid id="players-grid" allowPaging="true" allowSorting="true" dataSource="players" showColumnChooser="true" toolbar="@( new List<string>() { "ColumnChooser"})" allowFiltering="true">
            @* <e-data-manager url="@dataUrl" adaptor="UrlAdaptor"></e-data-manager>*@
            <e-grid-pagesettings pageSize="10" pageSizes="@pageSizes"></e-grid-pagesettings>
            <e-grid-filterSettings type="Excel"></e-grid-filterSettings>
            <e-grid-columns>
                <e-grid-column field="Id" headerText="ID" isPrimaryKey="true" visible="true" width="60"></e-grid-column>

                <e-grid-column field="FullName" headerText="Name" clipMode="EllipsisWithTooltip" width="150"></e-grid-column>

                <e-grid-column field="PositionName" headerText="Postion" clipMode="EllipsisWithTooltip" template="#positionTemplate" width="100"></e-grid-column>

                <e-grid-column field="ClubName" headerText="Club" clipMode="EllipsisWithTooltip" width="100"></e-grid-column>

                <e-grid-column field="Price" headerText="Price" clipMode="EllipsisWithTooltip" width="70"></e-grid-column>

                <e-grid-column field="SelectedPercent" headerText="Selected (%)" clipMode="EllipsisWithTooltip" width="100"></e-grid-column>

                <e-grid-column field="NextOpponents" headerText="Next Opponent" clipMode="EllipsisWithTooltip" width="120"></e-grid-column>

                <e-grid-column headerText="Next 5 Fixtures" template="#nexFiveFixturesTemplate" clipMode="EllipsisWithTooltip" width="200"></e-grid-column>
            </e-grid-columns>
        </ejs-grid>
    </div>
</div>

<script id="positionTemplate" type="text/x-template">
    ${renderPositionTemplate(data.PositionId, data.PositionName)}
</script>

<script id="nexFiveFixturesTemplate" type="text/x-template">
    ${renderNexFiveFixtures(data.NextFivePlayerFixtures)}
</script>

<script type="text/javascript">
    function renderPositionTemplate(positionId, positionName) {
        if (positionId == @((int)PlayerPositions.GKP)) {
            return "<span class='text-warning'>" + positionName + "</span>";
        } else if (positionId == @((int)PlayerPositions.DEF)) {
            return "<span class='text-danger'>" + positionName + "</span>";
        } else if (positionId == @((int)PlayerPositions.MID)) {
            return "<span class='text-success'>" + positionName + "</span>";
        }else{
            return "<span class='text-primary'>" + positionName + "</span>";
        }
    }

    function renderNexFiveFixtures(nextFivePlayerFixtures) {
        var nexFiveFixturesHtmlStr = "";
        var lastEventId = Math.max(...nextFivePlayerFixtures.map(x => x.Event));

        nextFivePlayerFixtures.forEach(function(item){
            if (item.Difficult < @((int)Difficulties.Normal)) 
            {
                nexFiveFixturesHtmlStr = nexFiveFixturesHtmlStr + "<span class='text-success'>" + item.OpponentTeamName + "</span>";
            } 
            else if (item.Difficult == @((int)Difficulties.Normal)) 
            {
                nexFiveFixturesHtmlStr = nexFiveFixturesHtmlStr + "<span class='text-warning'>" + item.OpponentTeamName + "</span>";
            } 
            else if (item.Difficult == @((int)Difficulties.Hard)) 
            {
                nexFiveFixturesHtmlStr = nexFiveFixturesHtmlStr + "<span class='text-danger'>" + item.OpponentTeamName + "</span>";
            } 
            else 
            {
                nexFiveFixturesHtmlStr = nexFiveFixturesHtmlStr + "<span class='text-very-difficult'>" + item.OpponentTeamName + "</span>";
            }

            if (item.Event != lastEventId) 
            {
                nexFiveFixturesHtmlStr = nexFiveFixturesHtmlStr + ", ";
            }
        });

        return nexFiveFixturesHtmlStr;
    }
</script>